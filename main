#!/usr/bin/python3
import os
import configparser
import base64
import time
import jwt
import string
from yt_dlp import YoutubeDL
from werkzeug.security import generate_password_hash, check_password_hash
from flask import Flask, render_template, request, url_for, flash, redirect, session, make_response, send_from_directory

config = configparser.ConfigParser()
config.read("config.ini")

HOST = config["config"]["HOST"]
PORT = config["config"]["PORT"]
MEDIA_FOLDER = config["config"]["MEDIA_FOLDER"]
BURGER_PASSWORD = config["config"]["BURGER_PASSWORD"]
DEBUG = config["config"]["DEBUG"]

ydl_opts = {"format": "best[ext=mp4]",
            "noplaylist": "True",
            "extract_flat": "in_playlist",
            "outtmpl": MEDIA_FOLDER + "/%(title)s.mp4",
            "match-filters": "%(height)d >= %(width)d"}

app = Flask(__name__)


BURGER_KEY = jwt.encode({str(os.urandom(2048)): str(os.urandom(2048))}, str(os.urandom(2048)), algorithm="HS256")


if not os.path.exists(MEDIA_FOLDER):
    os.mkdir(MEDIA_FOLDER)


def getMedia():
    media = os.listdir(MEDIA_FOLDER)
    return media


@app.route("/", methods=("GET", "POST"))
def main():
    return render_template("main.html", sitename=request.url)


@app.route("/api/v1/getkey/password=<password>", methods=("GET", "POST"))
def apigetkey(password):
    time.sleep(0.5)
    if str(password) == BURGER_PASSWORD or DEBUG == "true":
        return {
            "error": None,
            "results": {
                "key": BURGER_KEY}
        }
    else:
        return {
            "error": "Incorrect password"
        }


@app.route("/api/v1/key=<key>/list", methods=("GET", "POST"))
def apilist(key):
    if key == BURGER_KEY or DEBUG == "true":
        return {
            "error": None,
            "results": getMedia()
        }
    else:
        return {
            "error": "Incorrect key"
        }


@app.route("/api/v1/key=<key>/get/filename=<filename>", methods=("GET", "POST"))
def apiget(key, filename):
    if key == BURGER_KEY or DEBUG == "true":
        if os.path.exists(os.path.join(MEDIA_FOLDER, filename)):
            return send_from_directory(MEDIA_FOLDER, filename)
        else:
            return {
                "error": "File does not exist"
            }
    else:
        return {
            "error": "Incorrect key"
        }


@app.route("/api/v1/key=<key>/download/url=<url>", methods=("GET", "POST"))
def apidownload(key, url):
    if key == BURGER_KEY or DEBUG == "true":
        with YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            return {
                "error": None,
                "results": {"path": str(info["requested_downloads"][0]["_filename"])}
            }
        #except:
        #    return {
        #        "error": "Download failed"
        #    }
    else:
        return {
            "error": "Incorrect key"
        }


if __name__ == "__main__":
    from waitress import serve
    serve(app, host=HOST, port=PORT)
